{"version":3,"sources":["util/app.utils.js","constants/app.constants.js","components/Objects/Objects.js","components/MetricPanel/MetricPanel.js","components/Instances/Instances.js","components/Default/Default.js","App.js","reportWebVitals.js","index.js"],"names":["apiRequest","url","requestOptions","a","fetch","then","response","json","AppConst","buildNumber","env","BUILD_NUMBER","brokerCreds","brokerUsername","BROKER_USERNAME","brokerPassword","BROKER_PASSWORD","tableTitles","Objects","Instances","tables","apiUrls","getCatalog","tableHeaders","header","key","Metric","props","catalog","useState","rowData","setRowData","headerData","setHeaderData","useEffect","_","isEmpty","services","map","service","id","objectId","name","metadata","push","kind","updated","Date","toLocaleDateString","day","month","year","plans","plan","getRowDataFromCatalog","className","DataTable","isSortable","rows","headers","getHeaderProps","getRowProps","getTableProps","onInputChange","TableContainer","title","TableToolbar","TableToolbarSearch","placeholder","onChange","TableToolbarContent","TableToolbarMenu","disabled","children","renderIcon","Download16","onClick","e","console","log","Renew16","Table","TableHead","TableRow","index","TableHeader","TableBody","row","cells","cell","TableCell","value","displayName","MetricPanel","closePanel","items","label","HeaderPanel","expanded","Button","Close16","CodeSnippet","Dropdown","titleText","ariaLabel","initialSelectedItem","NumberInput","Add16","togglePanel","setTogglePanel","mockRows","onTestClick","TableExpandHeader","TableExpandRow","isExpanded","TableExpandedRow","colSpan","length","mockMetric","style","paddingLeft","Default","selectTable","setSelectTable","setCatalog","instructionsUrl","setInstructionUrl","documentationUrl","setDocumentationUrl","Headers","append","method","redirect","mode","SkeletonText","width","Link","target","href","description","ArrowsHorizontal16","App","exact","path","component","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc14e034.chunk.js","sourcesContent":["\r\nexport const getRowDataFromCatalog = (services) => {\r\n\tlet rowData = [];\r\n\tservices.map((service => {\r\n\t\tconst { id, id: objectId, name, metadata } = service;\r\n\t\trowData.push({\r\n\t\t\tid,\r\n\t\t\tobjectId,\r\n\t\t\tname,\r\n\t\t\tkind: \"Service\",\r\n\t\t\tupdated: new Date(metadata.updated).toLocaleDateString(\"en-US\", { day: \"numeric\", month: \"short\", year: \"numeric\" }, \"-\")\r\n\t\t});\r\n\t\tservice.plans.map((plan) => {\r\n\t\t\tconst { id, id: objectId, name, metadata } = plan;\r\n\t\t\trowData.push({\r\n\t\t\t\tid,\r\n\t\t\t\tobjectId,\r\n\t\t\t\tname,\r\n\t\t\t\tkind: \"Pricing Plan\",\r\n\t\t\t\tupdated: new Date(metadata.updated).toLocaleDateString(\"en-US\", { day: \"numeric\", month: \"short\", year: \"numeric\" }, \"-\")\r\n\t\t\t});\r\n\t\t\treturn true\r\n\t\t});\r\n\t\treturn true;\r\n\t}))\r\n\treturn rowData;\r\n};\r\n\r\nexport const apiRequest = async (url, requestOptions) => {\r\n\tlet response = await fetch(url, requestOptions)\r\n\t\t.then(response => response)\r\n\t\t.then(response => response.json())\r\n\treturn response;\r\n};\r\n\r\n","import env from \"react-dotenv\";\r\nexport const AppConst = {\r\n\tbuildNumber: env.BUILD_NUMBER || \"test_version_0.1\",\r\n\t\r\n\tbrokerCreds:{\r\n\t\tbrokerUsername: env.BROKER_USERNAME || \"admin\",\r\n\t\tbrokerPassword: env.BROKER_PASSWORD || \"admin\"\r\n\t},\r\n\r\n\ttableTitles: {\r\n\t\tObjects: \"Objects and metadata\",\r\n\t\tInstances: \"Instances\"\r\n\t},\r\n\r\n\ttables: [\"Objects\", \"Instances\"],\r\n\r\n\tapiUrls: {\r\n\t\tgetCatalog: \"/v2/catalog\"\r\n\t},\r\n\r\n\ttableHeaders: {\r\n\t\tObjects: [\r\n\t\t\t{\r\n\t\t\t\theader: 'Name',\r\n\t\t\t\tkey: 'name',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Kind',\r\n\t\t\t\tkey: 'kind',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'ID',\r\n\t\t\t\tkey: 'objectId',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Updated',\r\n\t\t\t\tkey: 'updated',\r\n\t\t\t}\r\n\t\t],\r\n\t\tInstances: [\r\n\t\t\t{\r\n\t\t\t\theader: 'Name',\r\n\t\t\t\tkey: 'name',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Kind',\r\n\t\t\t\tkey: 'kind',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'ID',\r\n\t\t\t\tkey: 'objectId',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Updated',\r\n\t\t\t\tkey: 'updated',\r\n\t\t\t}\r\n\t\t],\r\n\t\tMetric: [\r\n\t\t\t{\r\n\t\t\t\theader: 'Metric',\r\n\t\t\t\tkey: 'metric',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Type',\r\n\t\t\t\tkey: 'type',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'ID',\r\n\t\t\t\tkey: 'metricId',\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}\r\n","import {\r\n\tDataTable, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TableToolbar, TableToolbarSearch, TableToolbarContent, TableToolbarMenu\r\n} from \"carbon-components-react\";\r\nimport { Download16, Renew16 } from '@carbon/icons-react';\r\nimport './Objects.scss';\r\nimport { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { getRowDataFromCatalog } from \"../../util/app.utils\";\r\nimport { AppConst } from \"../../constants/app.constants\";\r\n\r\nfunction Objects(props) {\r\n\tconst { catalog } = props;\r\n\tconst [rowData, setRowData] = useState([]);\r\n\tconst [headerData, setHeaderData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!_.isEmpty(catalog)) {\r\n\t\t\tsetHeaderData(AppConst.tableHeaders.Objects);\r\n\t\t\tsetRowData(getRowDataFromCatalog(catalog.services));\r\n\t\t}\r\n\t}, [catalog])\r\n\r\n\treturn (\r\n\t\t<div className=\"bx--grid object-info\">\r\n\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t<DataTable isSortable={true} rows={rowData} headers={headerData}>\r\n\t\t\t\t\t\t{({ rows, headers, getHeaderProps, getRowProps, getTableProps, onInputChange }) => (\r\n\t\t\t\t\t\t\t<TableContainer key=\"tableContainer\" title={AppConst.tableTitles[\"Objects\"]}>\r\n\t\t\t\t\t\t\t\t<TableToolbar>\r\n\t\t\t\t\t\t\t\t\t<TableToolbarSearch placeholder=\"Search...\" onChange={onInputChange} />\r\n\t\t\t\t\t\t\t\t\t<TableToolbarContent>\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"download\" renderIcon={Download16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"refresh\" renderIcon={Renew16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t</TableToolbarContent>\r\n\t\t\t\t\t\t\t\t</TableToolbar>\r\n\t\t\t\t\t\t\t\t<Table {...getTableProps()}>\r\n\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t{headers.map((header, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableHeader key={index} {...getHeaderProps({ header })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{header.header}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t{rows.map((row, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={row.id} {...getRowProps({ row })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>{cell.value}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</DataTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nObjects.displayName = 'Objects';\r\n\r\nexport default Objects;\r\n","import {\r\n\tHeaderPanel, Button, CodeSnippet, Dropdown, NumberInput\r\n} from \"carbon-components-react\";\r\nimport { Close16, Add16 } from '@carbon/icons-react';\r\nimport './MetricPanel.scss';\r\nimport { useEffect } from \"react\";\r\nfunction MetricPanel(props) {\r\n\tconst { closePanel } = props;\r\n\r\n\tconst items = [\r\n\t\t{\r\n\t\t\tid: 'us-south',\r\n\t\t\tlabel: 'Dallas (us-south)',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'ca-tor',\r\n\t\t\tlabel: 'Torronto (ca-tor)',\r\n\t\t}\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<HeaderPanel expanded>\r\n\t\t\t<div className=\"bx--grid\">\r\n\t\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-14\">\r\n\t\t\t\t\t\t<h3>Estimation and pricing</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--col-lg-2\">\r\n\t\t\t\t\t\t<Button kind=\"ghost\" onClick={closePanel} className=\"panel-close-btn\" renderIcon={Close16} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t<div className=\"bx--label\">Pricing plan name</div>\r\n\t\t\t\t\t\t<CodeSnippet className=\"panel-ele-70\">Usage-bases</CodeSnippet>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t<div className=\"bx--label\">Pricing plan programmatic name</div>\r\n\t\t\t\t\t\t<CodeSnippet className=\"panel-ele-70\">usage-bases</CodeSnippet>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\ttitleText=\"Location\"\r\n\t\t\t\t\t\t\tclassName=\"panel-ele-70\"\r\n\t\t\t\t\t\t\tariaLabel=\"Dropdown\"\r\n\t\t\t\t\t\t\tid=\"carbon-dropdown-example\"\r\n\t\t\t\t\t\t\titems={items}\r\n\t\t\t\t\t\t\tinitialSelectedItem={items[0]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t<h5>Estimation</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-8\">\r\n\t\t\t\t\t\t<div className=\"bx--label\">Gigabyte-hours</div>\r\n\t\t\t\t\t\t<NumberInput></NumberInput>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--col-lg-8 text-right\">\r\n\t\t\t\t\t\t<div className=\"bx--label\">Estimated monthly charge</div>\r\n\t\t\t\t\t\t<h6>$0.00</h6>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-8\">\r\n\t\t\t\t\t\t<div className=\"bx--label\">Another-metrics</div>\r\n\t\t\t\t\t\t<NumberInput></NumberInput>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--col-lg-8 text-right\">\r\n\t\t\t\t\t\t<h6>$0.00</h6>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t<h5>Testing</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bx--row sub-row testing-row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\tOnce you've entered values for any metrics you'd\r\n\t\t\t\t\t\tike to test, you can fire corresponding usage events\r\n\t\t\t\t\t\tusing our wonderful button.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--col-lg-16 sub-row\">\r\n\t\t\t\t\t\tData Table goes here\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--col-lg-16 sub-row\">\r\n\t\t\t\t\t\t<Button renderIcon={Add16}>Send metering data</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</HeaderPanel>\r\n\t);\r\n}\r\n\r\nMetricPanel.displayName = 'MetricPanel';\r\n\r\nexport default MetricPanel;\r\n","import {\r\n\tDataTable, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TableExpandRow, TableExpandedRow, TableExpandHeader, TableToolbar, TableToolbarSearch, TableToolbarContent, TableToolbarMenu, Button, HeaderPanel\r\n} from \"carbon-components-react\";\r\nimport { Download16, Renew16 } from '@carbon/icons-react';\r\nimport './Instances.scss';\r\nimport mockRows from '../../constants/mock_rows.json';\r\nimport mockMetric from '../../constants/mock_metric.json';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { AppConst } from \"../../constants/app.constants\";\r\nimport MetricPanel from \"../MetricPanel/MetricPanel\";\r\n\r\nfunction Instances() {\r\n\r\n\tconst [rowData, setRowData] = useState([]);\r\n\tconst [headerData, setHeaderData] = useState([]);\r\n\tconst [togglePanel, setTogglePanel] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHeaderData(AppConst.tableHeaders.Instances);\r\n\t\tsetRowData(mockRows);\r\n\t}, [])\r\n\r\n\tconst onTestClick = (e) => {\r\n\t\tsetTogglePanel(!togglePanel);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"bx--grid instances-info\">\r\n\t\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t<DataTable rows={rowData} headers={headerData}>\r\n\t\t\t\t\t\t\t{({ rows, headers, getHeaderProps, getRowProps, getTableProps, onInputChange }) => (\r\n\t\t\t\t\t\t\t\t<TableContainer key=\"tableContainer\" title={AppConst.tableTitles[\"Instances\"]}>\r\n\t\t\t\t\t\t\t\t\t<TableToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarSearch placeholder=\"Search...\" onChange={onInputChange} />\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarContent>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"download\" renderIcon={Download16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"refresh\" renderIcon={Renew16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t\t</TableToolbarContent>\r\n\t\t\t\t\t\t\t\t\t</TableToolbar>\r\n\t\t\t\t\t\t\t\t\t<Table {...getTableProps()}>\r\n\t\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableExpandHeader />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headers.map((header, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableHeader key={index} {...getHeaderProps({ header })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{header.header}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t{rows.map((row) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableExpandRow key={row.id} {...getRowProps({ row })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>{cell.value}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableExpandRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row.isExpanded && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableExpandedRow colSpan={headers.length + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"metric-desc\">Here are the metrics for this pricing plan.You can even fire events from them to see if things\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tare hooked up right.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"align-right\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={onTestClick} className=\"test-metric-btn\">Test metric reporting</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DataTable rows={mockMetric} headers={AppConst.tableHeaders.Metric}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ rows, headers, getHeaderProps, getTableProps }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableContainer title=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table className=\"metric-table\" {...getTableProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{headers.map((header) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableHeader {...getHeaderProps({ header })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{header.header}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableBody className=\"metric-table-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{rows.map((row) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={row.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell style={{ paddingLeft: \"1rem\" }} key={cell.id}>{cell.value}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DataTable>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableExpandedRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</DataTable>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{togglePanel && <MetricPanel closePanel={onTestClick}></MetricPanel>}\r\n\t\t\t{/* {togglePanel && <HeaderPanel expanded></HeaderPanel>} */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nInstances.displayName = 'Instances';\r\n\r\nexport default Instances;\r\n","import { Button, CodeSnippet, Link, SkeletonText } from \"carbon-components-react\";\r\nimport { CheckmarkFilled16, Launch16, ArrowsHorizontal16 } from '@carbon/icons-react';\r\nimport './Default.scss';\r\nimport Objects from \"../Objects/Objects\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AppConst } from \"../../constants/app.constants\";\r\nimport Instances from \"../Instances/Instances\";\r\nimport { apiRequest } from \"../../util/app.utils\";\r\nimport _ from \"lodash\";\r\n\r\nfunction Default() {\r\n\tconst [selectTable, setSelectTable] = useState(true);\r\n\tconst [catalog, setCatalog] = useState({});\r\n\tconst [instructionsUrl, setInstructionUrl] = useState(\"#\");\r\n\tconst [documentationUrl, setDocumentationUrl] = useState(\"#\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (_.isEmpty(catalog)) {\r\n\t\t\tgetCatalog();\r\n\t\t}\r\n\t})\r\n\r\n\tconst getCatalog = async () => {\r\n\t\tvar headers = new Headers();\r\n\t\theaders.append(\"Content-Type\", \"application/json\");\r\n\t\theaders.append(\"Accept\", \"application/json\");\r\n\t\tvar requestOptions = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: headers,\r\n\t\t\tredirect: 'follow',\r\n\t\t\tmode: 'cors'\r\n\t\t};\r\n\t\tlet response = await apiRequest(AppConst.apiUrls.getCatalog, requestOptions);\r\n\t\tif (!_.isEmpty(response)) {\r\n\t\t\tsetInstructionUrl(response.services[0].metadata.instructionsUrl);\r\n\t\t\tsetDocumentationUrl(response.services[0].metadata.documentationUrl);\r\n\t\t\tsetCatalog(response);\r\n\t\t}\r\n\t\treturn response;\r\n\t}\r\n\r\n\tconst toggleTable = () => {\r\n\t\tsetSelectTable(!selectTable)\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"bx--grid\">\r\n\t\t\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t\t\t<div className=\"bx--col-lg-12\">\r\n\t\t\t\t\t\t\t<span className=\"h3\">\r\n\t\t\t\t\t\t\t\t{!_.isEmpty(catalog) ? catalog.services[0].name : <SkeletonText width=\"15%\" className=\"skeletopn-text\" />}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span><CheckmarkFilled16 aria-label=\"status\" className=\"svg-left fill-green\" /> Running</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bx--col-lg-4 link-blank\">\r\n\t\t\t\t\t\t\t<Link className=\"\" target=\"_blank\" href=\"#\">Manage on IBM Cloud<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--grid broker-info\">\r\n\t\t\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-12\">\r\n\t\t\t\t\t\t\t\t<span className=\"h5\">Service broker</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-4 link-left\">\r\n\t\t\t\t\t\t\t\t<Link className=\"\" target=\"_blank\" href=\"#\">Partner Center | Sell<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-12\">\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{!_.isEmpty(catalog) ? catalog.services[0].description : <SkeletonText width=\"15%\" className=\"skeletopn-text\" />}\r\n\t\t\t\t\t\t\t\t\t<Link className=\"inline-link\" target=\"_blank\" href={documentationUrl}>Learn more<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-4 link-left\">\r\n\t\t\t\t\t\t\t\t<Link className=\"\" target=\"_blank\" href={instructionsUrl}>How to use<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t\t\t<div className=\"bx--label\">Build number</div>\r\n\t\t\t\t\t\t\t\t<CodeSnippet>{AppConst.buildNumber}</CodeSnippet>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{selectTable ? <Objects catalog={catalog}></Objects> : <Instances></Instances>}\r\n\r\n\t\t\t\t\t<Button className=\"tableToggle\" onClick={toggleTable} renderIcon={ArrowsHorizontal16} kind=\"tertiary\">\r\n\t\t\t\t\t\tView {AppConst.tables[selectTable ? 1 : 0]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nDefault.displayName = 'Default';\r\n\r\nexport default Default;\r\n","\nimport './App.scss';\nimport Default from './components/Default/Default';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  HashRouter\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Default} />\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </HashRouter>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}