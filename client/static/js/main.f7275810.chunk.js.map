{"version":3,"sources":["util/app.utils.js","constants/app.constants.js","components/Objects/Objects.js","components/Instances/Instances.js","components/Default/Default.js","App.js","reportWebVitals.js","index.js"],"names":["AppUtils","getRowDataFromCatalog","services","rowData","map","service","id","objectId","name","metadata","push","kind","updated","Date","toLocaleDateString","day","month","year","plans","plan","apiRequest","url","requestOptions","a","fetch","then","response","json","AppConst","buildNumber","env","BUILD_NUMBER","brokerCreds","brokerUsername","BROKER_USERNAME","brokerPassword","BROKER_PASSWORD","tableTitles","Objects","Instances","tables","apiUrls","getCatalog","tableHeaders","header","key","props","catalog","useState","setRowData","headerData","setHeaderData","useEffect","_","isEmpty","className","DataTable","isSortable","rows","headers","getHeaderProps","getRowProps","getTableProps","onInputChange","TableContainer","title","TableToolbar","TableToolbarSearch","placeholder","onChange","TableToolbarContent","TableToolbarMenu","disabled","children","renderIcon","Download16","onClick","e","console","log","Renew16","Table","TableHead","TableRow","index","TableHeader","TableBody","row","cells","cell","TableCell","value","displayName","mockRows","TableExpandHeader","TableExpandRow","isExpanded","TableExpandedRow","colSpan","length","Default","selectTable","setSelectTable","setCatalog","instructionsUrl","setInstructionUrl","documentationUrl","setDocumentationUrl","Headers","append","method","redirect","mode","SkeletonText","width","Link","target","href","description","CodeSnippet","Button","ArrowsHorizontal16","App","exact","path","component","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7275810.chunk.js","sourcesContent":["export const AppUtils = {\r\n\tgetRowDataFromCatalog: (services) => {\r\n\t\tlet rowData = [];\r\n\t\tservices.map((service => {\r\n\t\t\tconst { id, id: objectId, name, metadata } = service;\r\n\t\t\trowData.push({\r\n\t\t\t\tid,\r\n\t\t\t\tobjectId,\r\n\t\t\t\tname,\r\n\t\t\t\tkind: \"Service\",\r\n\t\t\t\tupdated: new Date(metadata.updated).toLocaleDateString(\"en-US\", { day: \"numeric\", month: \"short\", year: \"numeric\" }, \"-\")\r\n\t\t\t});\r\n\t\t\tservice.plans.map((plan) => {\r\n\t\t\t\tconst { id, id: objectId, name, metadata } = plan;\r\n\t\t\t\trowData.push({\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tobjectId,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tkind: \"Pricing Plan\",\r\n\t\t\t\t\tupdated: new Date(metadata.updated).toLocaleDateString(\"en-US\", { day: \"numeric\", month: \"short\", year: \"numeric\" }, \"-\")\r\n\t\t\t\t});\r\n\t\t\t\treturn true\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t}))\r\n\t\treturn rowData;\r\n\t},\r\n\r\n\tapiRequest: async (url, requestOptions) => {\r\n\t\tlet response = await fetch(url, requestOptions)\r\n\t\t\t.then(response => response)\r\n\t\t\t.then(response => response.json())\r\n\t\treturn response;\r\n\t}\r\n}\r\n","import env from \"react-dotenv\";\r\nexport const AppConst = {\r\n\tbuildNumber: env.BUILD_NUMBER || \"test_version_0.1\",\r\n\t\r\n\tbrokerCreds:{\r\n\t\tbrokerUsername: env.BROKER_USERNAME || \"admin\",\r\n\t\tbrokerPassword: env.BROKER_PASSWORD || \"admin\"\r\n\t},\r\n\r\n\ttableTitles: {\r\n\t\tObjects: \"Objects and metadata\",\r\n\t\tInstances: \"Instances\"\r\n\t},\r\n\r\n\ttables: [\"Objects\", \"Instances\"],\r\n\r\n\tapiUrls: {\r\n\t\tgetCatalog: \"/v2/catalog\"\r\n\t},\r\n\r\n\ttableHeaders: {\r\n\t\tObjects: [\r\n\t\t\t{\r\n\t\t\t\theader: 'Name',\r\n\t\t\t\tkey: 'name',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Kind',\r\n\t\t\t\tkey: 'kind',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'ID',\r\n\t\t\t\tkey: 'objectId',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Updated',\r\n\t\t\t\tkey: 'updated',\r\n\t\t\t}\r\n\t\t],\r\n\t\tInstances: [\r\n\t\t\t{\r\n\t\t\t\theader: 'Name',\r\n\t\t\t\tkey: 'name',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Kind',\r\n\t\t\t\tkey: 'kind',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'ID',\r\n\t\t\t\tkey: 'objectId',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: 'Updated',\r\n\t\t\t\tkey: 'updated',\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}\r\n","import {\r\n\tDataTable, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TableToolbar, TableToolbarSearch, TableToolbarContent, TableToolbarMenu\r\n} from \"carbon-components-react\";\r\nimport { Download16, Renew16 } from '@carbon/icons-react';\r\nimport './Objects.scss';\r\nimport { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { AppUtils } from \"../../util/app.utils\";\r\nimport { AppConst } from \"../../constants/app.constants\";\r\n\r\nfunction Objects(props) {\r\n\tconst { catalog } = props;\r\n\tconst [rowData, setRowData] = useState([]);\r\n\tconst [headerData, setHeaderData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!_.isEmpty(catalog)) {\r\n\t\t\tsetHeaderData(AppConst.tableHeaders.Objects);\r\n\t\t\tsetRowData(AppUtils.getRowDataFromCatalog(catalog.services));\r\n\t\t}\r\n\t}, [catalog])\r\n\r\n\treturn (\r\n\t\t<div className=\"bx--grid object-info\">\r\n\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t<DataTable isSortable={true} rows={rowData} headers={headerData}>\r\n\t\t\t\t\t\t{({ rows, headers, getHeaderProps, getRowProps, getTableProps, onInputChange }) => (\r\n\t\t\t\t\t\t\t<TableContainer key=\"tableContainer\" title={AppConst.tableTitles[\"Objects\"]}>\r\n\t\t\t\t\t\t\t\t<TableToolbar>\r\n\t\t\t\t\t\t\t\t\t<TableToolbarSearch placeholder=\"Search...\" onChange={onInputChange} />\r\n\t\t\t\t\t\t\t\t\t<TableToolbarContent>\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"download\" renderIcon={Download16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"refresh\" renderIcon={Renew16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t</TableToolbarContent>\r\n\t\t\t\t\t\t\t\t</TableToolbar>\r\n\t\t\t\t\t\t\t\t<Table {...getTableProps()}>\r\n\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t{headers.map((header, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableHeader key={index} {...getHeaderProps({ header })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{header.header}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t{rows.map((row, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={row.id} {...getRowProps({ row })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>{cell.value}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</DataTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nObjects.displayName = 'Objects';\r\n\r\nexport default Objects;\r\n","import {\r\n\tDataTable, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TableExpandRow, TableExpandedRow, TableExpandHeader, TableToolbar, TableToolbarSearch, TableToolbarContent, TableToolbarMenu, Button\r\n} from \"carbon-components-react\";\r\nimport { Download16, Renew16 } from '@carbon/icons-react';\r\nimport './Instances.scss';\r\nimport mockRows from '../../constants/mock_rows.json'\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { AppConst } from \"../../constants/app.constants\";\r\n\r\nfunction Instances() {\r\n\r\n\tconst [rowData, setRowData] = useState([]);\r\n\tconst [headerData, setHeaderData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHeaderData(AppConst.tableHeaders.Instances);\r\n\t\tsetRowData(mockRows);\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"bx--grid instances-info\">\r\n\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t<DataTable rows={rowData} headers={headerData}>\r\n\t\t\t\t\t\t{({ rows, headers, getHeaderProps, getRowProps, getTableProps, onInputChange }) => (\r\n\t\t\t\t\t\t\t<TableContainer key=\"tableContainer\" title={AppConst.tableTitles[\"Instances\"]}>\r\n\t\t\t\t\t\t\t\t<TableToolbar>\r\n\t\t\t\t\t\t\t\t\t<TableToolbarSearch placeholder=\"Search...\" onChange={onInputChange} />\r\n\t\t\t\t\t\t\t\t\t<TableToolbarContent>\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"download\" renderIcon={Download16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t\t<TableToolbarMenu disabled children={[]} key=\"refresh\" renderIcon={Renew16} onClick={(e) => { console.log(e) }} />\r\n\t\t\t\t\t\t\t\t\t</TableToolbarContent>\r\n\t\t\t\t\t\t\t\t</TableToolbar>\r\n\t\t\t\t\t\t\t\t<Table {...getTableProps()}>\r\n\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableExpandHeader />\r\n\t\t\t\t\t\t\t\t\t\t\t{headers.map((header, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableHeader key={index} {...getHeaderProps({ header })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{header.header}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t{rows.map((row) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableExpandRow key={row.id} {...getRowProps({ row })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>{cell.value}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableExpandRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.isExpanded && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableExpandedRow colSpan={headers.length + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>Expanded content</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>In progress!</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableExpandedRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</DataTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nInstances.displayName = 'Instances';\r\n\r\nexport default Instances;\r\n","import { Button, CodeSnippet, Link, ModalWrapper, SkeletonText, Tag, TextInput } from \"carbon-components-react\";\r\nimport { CheckmarkFilled16, Launch16, ArrowsHorizontal16 } from '@carbon/icons-react';\r\nimport './Default.scss';\r\nimport Objects from \"../Objects/Objects\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AppConst } from \"../../constants/app.constants\";\r\nimport Instances from \"../Instances/Instances\";\r\nimport { AppUtils } from \"../../util/app.utils\";\r\nimport _ from \"lodash\";\r\n\r\nfunction Default() {\r\n\tconst [selectTable, setSelectTable] = useState(true);\r\n\tconst [catalog, setCatalog] = useState({});\r\n\tconst [instructionsUrl, setInstructionUrl] = useState(\"#\");\r\n\tconst [documentationUrl, setDocumentationUrl] = useState(\"#\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (_.isEmpty(catalog)) {\r\n\t\t\tgetCatalog();\r\n\t\t}\r\n\t})\r\n\r\n\tconst getCatalog = async () => {\r\n\t\tvar headers = new Headers();\r\n\t\theaders.append(\"Content-Type\", \"application/json\");\r\n\t\theaders.append(\"Accept\", \"application/json\");\r\n\t\tvar requestOptions = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: headers,\r\n\t\t\tredirect: 'follow',\r\n\t\t\tmode: 'cors'\r\n\t\t};\r\n\t\tlet response = await AppUtils.apiRequest(AppConst.apiUrls.getCatalog, requestOptions);\r\n\t\tif (!_.isEmpty(response)) {\r\n\t\t\tsetInstructionUrl(response.services[0].metadata.instructionsUrl);\r\n\t\t\tsetDocumentationUrl(response.services[0].metadata.documentationUrl);\r\n\t\t\tsetCatalog(response);\r\n\t\t}\r\n\t\treturn response;\r\n\t}\r\n\r\n\tconst toggleTable = () => {\r\n\t\tsetSelectTable(!selectTable)\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"bx--grid\">\r\n\t\t\t\t\t<div className=\"bx--row\">\r\n\t\t\t\t\t\t<div className=\"bx--col-lg-12\">\r\n\t\t\t\t\t\t\t<span className=\"h3\">\r\n\t\t\t\t\t\t\t\t{!_.isEmpty(catalog) ? catalog.services[0].name : <SkeletonText width=\"15%\" className=\"skeletopn-text\" />}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span><CheckmarkFilled16 aria-label=\"status\" className=\"svg-left fill-green\" /> Running</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bx--col-lg-4 link-blank\">\r\n\t\t\t\t\t\t\t<Link className=\"\" target=\"_blank\" href=\"#\">Manage on IBM Cloud<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bx--grid broker-info\">\r\n\t\t\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-12\">\r\n\t\t\t\t\t\t\t\t<span className=\"h5\">Service broker</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-4 link-left\">\r\n\t\t\t\t\t\t\t\t<Link className=\"\" target=\"_blank\" href=\"#\">Partner Center | Sell<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-12\">\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{!_.isEmpty(catalog) ? catalog.services[0].description : <SkeletonText width=\"15%\" className=\"skeletopn-text\" />}\r\n\t\t\t\t\t\t\t\t\t<Link className=\"inline-link\" target=\"_blank\" href={documentationUrl}>Learn more<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-4 link-left\">\r\n\t\t\t\t\t\t\t\t<Link className=\"\" target=\"_blank\" href={instructionsUrl}>How to use<Launch16 aria-label=\"open link\" className=\"svg-right fill-link\" /></Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bx--row sub-row\">\r\n\t\t\t\t\t\t\t<div className=\"bx--col-lg-16\">\r\n\t\t\t\t\t\t\t\t<div className=\"bx--label\">Build number</div>\r\n\t\t\t\t\t\t\t\t<CodeSnippet>{AppConst.buildNumber}</CodeSnippet>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{selectTable ? <Objects catalog={catalog}></Objects> : <Instances></Instances>}\r\n\r\n\t\t\t\t\t<Button className=\"tableToggle\" onClick={toggleTable} renderIcon={ArrowsHorizontal16} kind=\"tertiary\">\r\n\t\t\t\t\t\tView {AppConst.tables[selectTable ? 1 : 0]}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nDefault.displayName = 'Default';\r\n\r\nexport default Default;\r\n","\nimport './App.scss';\nimport Default from './components/Default/Default';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  HashRouter\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Default} />\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </HashRouter>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}